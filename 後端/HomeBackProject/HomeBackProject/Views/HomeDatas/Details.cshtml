@model HomeBackProject.Models.HomeData

@{
    if (Session["userID"] == null) { Layout = "~/Views/Shared/_Layout.cshtml"; }
    else if (Session["userRank"].ToString() != "4") { Layout = "~/Views/Shared/_Layout_LogInOut.cshtml"; }
    else { Layout = "~/Views/Shared/_Layout_admin.cshtml"; }
    ViewBag.Title = @Model.HomeName;
}

<div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel" style="max-width:500px">
    <div class="carousel-indicators">
        @for (int i = 0; i <= @ViewBag.allPhotoCount; i++)
        {
            if (i == 0)
            {
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" class="active" aria-current="true" aria-label="Slide (@i+1)"></button>
            }
            else
            {
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" aria-label="Slide (@i+1)"></button>
            }
        }
    </div>
    <div class="carousel-inner">
        @foreach (var photo in @ViewBag.allPhoto)
        {
            <img src="@photo" class="carousel-item w-100"/>
        }
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<div>
    <h4>HomeData</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.HomeName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeMoney)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeMoney)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeSquareMeters)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeSquareMeters)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeMetersMoney)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeMetersMoney)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CityTypeData.CityTW)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CityTypeData.CityTW)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeTown)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeTown)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeStreet)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeStreet)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeFloor)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeFloor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeHighFloor)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeHighFloor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeSaleAndLease)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeSaleAndLease)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeAges)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeAges)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeRoom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeRoom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeHall)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeHall)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeBathroom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeBathroom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeBalcony)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeBalcony)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeFeatures)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeFeatures)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HomeManageTip)
        </dt>

        <dd>
            @string.Format("{0:C0}", @Model.HomeManageTip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ADTypeData.ADName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ADTypeData.ADName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CarTypeData.CarTypeName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CarTypeData.CarTypeName)
        </dd>



        <dt>
            @Html.DisplayNameFor(model => model.HomeTypeData.HomeTypeName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HomeTypeData.HomeTypeName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SaleTypeData.SaleState)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SaleTypeData.SaleState)
        </dd>

    </dl>
</div>




<div>
    @Html.ActionLink("編輯", "Edit", new { id = Model.HomeID }, new { @class = "btn btn-primary" })
    @Html.ActionLink("刪除", "Delete", new { id = Model.HomeID }, new { @class = "btn btn-danger ms-3" })
    @Html.ActionLink("回到上一頁", "Index", new { }, new { @class = "btn btn-primary" })
</div>

@section Script {
    <script>
        var dom = $(".carousel-inner").children().attr("class");
        dom = $("img:nth-child(1)").addClass("active");
        console.log(dom)
    </script>
}